name: Create Release

on:
  push:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: 'write'

env:
  APP_NAME: "portal"
  TAG: "v0.0.1"

jobs:

  build-releases:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu]
        build-os: [windows,linux]
        arch: [amd64]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fetch Tags
        run: git fetch --force --tags

      - name: Setup Golang
        uses: actions/setup-go@v3
        with:
          go-version: '>=1.18.0'
          cache: true
          
      - name: Setup Nodejs v18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
          
      - name: Install Wails with dependencies
        run: |
            sudo apt-get update -yq && \
            sudo apt-get install -yq nsis pkg-config libwebkit2gtk-4.0-37 libwebkit2gtk-4.0-dev libgtk-3-dev software-properties-common build-essential wget && \
            go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Build Wails for ${{ matrix.build-os }} ${{ matrix.arch }}
        if: ${{ matrix.build-os }} != "windows"
        run: |
          wails build -f -platform ${{ matrix.build-os }}/${{ matrix.arch }} -clean -o ${{ env.APP_NAME }}-${{ matrix.build-os }}-${{ matrix.arch }}.exe 
        env:
          GOOS: ${{ matrix.build-os }}
          GOARCH: ${{ matrix.arch }}

      - name: Build Wails for ${{ matrix.build-os }} ${{ matrix.arch }}
        if: ${{ matrix.build-os }} == "windows"
        run: |
          wails build -f -nsis -platform ${{ matrix.build-os }}/${{ matrix.arch }} -clean -o ${{ env.APP_NAME }}-${{ matrix.build-os }}-${{ matrix.arch }}.exe
        env:
          GOOS: ${{ matrix.build-os }}
          GOARCH: ${{ matrix.arch }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG }}
          release_name: Release ${{ env.TAG }}
          body: |
            This is the release body.
            It can contain multiple lines of text.
          draft: false
          prerelease: true

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.APP_NAME }} 
          path: ./${{ env.APP_NAME }}-${{ matrix.build-os }}-${{ matrix.arch }}.exe
